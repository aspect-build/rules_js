"@generated by @aspect_rules_js//js/private:npm_import.bzl for npm package webpack-bundle-analyzer@4.5.0_bufferutil@4.0.1"

load("@aspect_bazel_lib//lib:directory_path.bzl", _directory_path = "directory_path")
load("@aspect_rules_js//js:defs.bzl", _js_binary = "js_binary", _js_test = "js_test")
load("@aspect_rules_js//js:run_js_binary.bzl", _run_js_binary = "run_js_binary")

def webpack_bundle_analyzer(name, **kwargs):
    _directory_path(
        name = "%s__entry_point" % name,
        directory = "//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1__dir",
        path = "lib/bin/analyzer.js",
    )
    _js_binary(
        name = "%s__js_binary" % name,
        entry_point = ":%s__entry_point" % name,
        data = kwargs.pop("data", []) + ["//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1"],
    )
    _run_js_binary(
        name = name,
        tool = ":%s__js_binary" % name,
        **kwargs
    )

def webpack_bundle_analyzer_test(name, **kwargs):
    _directory_path(
        name = "%s__entry_point" % name,
        directory = "//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1__dir",
        path = "lib/bin/analyzer.js",
    )
    _js_test(
        name = name,
        entry_point = ":%s__entry_point" % name,
        data = kwargs.pop("data", []) + ["//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1"],
        **kwargs
    )

def webpack_bundle_analyzer_binary(name, **kwargs):
    _directory_path(
        name = "%s__entry_point" % name,
        directory = "//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1__dir",
        path = "lib/bin/analyzer.js",
    )
    _js_binary(
        name = name,
        entry_point = ":%s__entry_point" % name,
        data = kwargs.pop("data", []) + ["//example:jsp__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1"],
        **kwargs
    )

bin = struct(webpack_bundle_analyzer = webpack_bundle_analyzer, webpack_bundle_analyzer_test = webpack_bundle_analyzer_test, webpack_bundle_analyzer_binary = webpack_bundle_analyzer_binary)
