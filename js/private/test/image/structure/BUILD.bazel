load("//js:defs.bzl", "js_binary", "js_image_layer")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@aspect_bazel_lib//lib:utils.bzl", "is_bazel_6_or_greater")

js_binary(
    name = "bin",
    data = [
        "//js/private/test/image:node_modules/acorn",
    ],
    entry_point = "main.js",
)

platform(
    name = "amd64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

js_image_layer(
    name = "layers",
    binary = ":bin",
    # gzip compression embeds os information into the archive which is not okay from reproducibility standpoint.
    # set it to none since uncompressed archive is always stable.
    # more: https://stackoverflow.com/questions/26516369/zlib-gzip-produces-different-results-for-same-input-on-different-oses
    compression = "none",
    platform = ":amd64_linux",
    root = "/app",
    # TODO: figure out why the digests_generated.sum is different on buildbuddy executors
    tags = ["no-remote-exec"],
)

filegroup(
    name = "app_layer",
    srcs = [":layers"],
    output_group = "app",
)

filegroup(
    name = "node_modules_layer",
    srcs = [":layers"],
    output_group = "node_modules",
)

genrule(
    name = "structure",
    srcs = [
        ":app_layer",
        ":node_modules_layer",
    ],
    outs = [
        "app_structure_generated.mf",
        "node_modules_structure_generated.mf",
        "digests_generated.sum",
    ],
    cmd = " && ".join([
        "tar -tf ./$(location :app_layer) > $(location :app_structure_generated.mf)",
        "tar -tf ./$(location :node_modules_layer) > $(location :node_modules_structure_generated.mf)",
        """$(COREUTILS_BIN) sha256sum ./$(location :app_layer) ./$(location :node_modules_layer) | $(COREUTILS_BIN) cut -f1 -d " " > $(location digests_generated.sum)""",
    ]),
    output_to_bindir = True,
    toolchains = ["@coreutils_toolchains//:resolved_toolchain"],
)

suffix = "" if is_bazel_6_or_greater() else "_legacy"

write_source_files(
    name = "diff",
    files = {
        "app_structure{}.mf".format(suffix): ":app_structure_generated.mf",
        "node_modules_structure{}.mf".format(suffix): ":node_modules_structure_generated.mf",
        "digests{}.sum".format(suffix): ":digests_generated.sum",
    },
    tags = [
        # mode bit on files aren't stable between RBE and Local since RBE isn't aware of git which tracks permissions for files.
        # we don't care about unstable inputs because it's not our responsibility to keep them stable which would expand api surface for js_image_layer
        "no-remote-exec",
    ],
    target_compatible_with = select({
        "@aspect_bazel_lib//lib:bzlmod": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
