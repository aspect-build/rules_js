load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@aspect_bazel_lib_host//:defs.bzl", "host")
load("//js:defs.bzl", "js_binary")
load(":pnpm_utils_tests.bzl", "pnpm_utils_tests")
load(":transitive_closure_tests.bzl", "transitive_closure_tests")
load(":yaml_tests.bzl", "yaml_tests")

# gazelle:exclude *_checked.bzl

# Unit tests
pnpm_utils_tests(name = "test_pnpm_utils")

transitive_closure_tests(name = "test_transitive_closure")

yaml_tests(name = "test_yaml")

####################################################################################################
# Write a js_binary launcher to the source tree so it is shell checked on commit

write_file(
    name = "shellcheck_js",
    out = "shellcheck.js",
)

js_binary(
    name = "shellcheck_launcher",
    entry_point = "shellcheck.js",
)

# For consistency on different platform, replace the host nodejs platform to linux_amd64
genrule(
    name = "shell_launcher_sed",
    srcs = [":shellcheck_launcher"],
    outs = ["shellcheck_launcher_sed.sh"],
    cmd = "cat $(execpath :shellcheck_launcher) | sed \"s#%s#linux_amd64#\" > $@" % host.platform,
)

write_source_files(
    name = "write_shellcheck_launcher",
    files = {
        "shellcheck_launcher.sh": ":shell_launcher_sed",
    },
)

write_source_files(
    name = "write_translate_pnpm_lock",
    files = {
        "repositories_checked.bzl": "@example_npm_deps//:repositories.bzl",
        "defs_checked.bzl": "@example_npm_deps//:defs.bzl",
        "package_json_checked.bzl": "@example_npm_deps__rollup__2.70.2//:package_json.bzl",
    },
)
