bazel_dep(name = "aspect_rules_js", version = "0.0.0", dev_dependency = True)
local_path_override(
    module_name = "aspect_rules_js",
    path = "../..",
)

# The same primary lockfile across all versions
PNPM_LOCK_VERSIONS = [
    "v54",
    "v60",
    "v61",
    "v90",
]

# Lockfiles with unique test cases
PNPM_LOCK_TEST_CASES = [
    "tarball-no-url-v54.yaml",
    "override-with-alias-url-v9.yaml",
    "isaacs-cliui-v90.yaml",
]

bazel_dep(name = "aspect_bazel_lib", version = "2.7.7")

bazel_dep(name = "bazel_skylib", version = "1.5.0", dev_dependency = True)
bazel_dep(name = "rules_nodejs", version = "6.1.0", dev_dependency = True)

bazel_dep(name = "platforms", version = "0.0.5")

node = use_extension(
    "@rules_nodejs//nodejs:extensions.bzl",
    "node",
    dev_dependency = True,
)
use_repo(node, "nodejs_toolchains")
use_repo(node, "nodejs_darwin_amd64")
use_repo(node, "nodejs_darwin_arm64")
use_repo(node, "nodejs_linux_amd64")
use_repo(node, "nodejs_linux_arm64")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)

[
    npm.npm_translate_lock(
        name = "lock-%s" % version,
        data = [
            "//%s:package.json" % version,
            "//%s:patches/meaning-of-life@1.0.0-pnpm.patch" % version,
        ],
        pnpm_lock = "//%s:pnpm-lock.yaml" % version,
        verify_node_modules_ignored = "//:.bazelignore",
    )
    for version in PNPM_LOCK_VERSIONS
]

# repos used by the lockfile tests
[
    use_repo(
        npm,
        "lock-%s" % version,
        "lock-%s__rollup__3.2.5" % version,
        "lock-%s__rollup__3.2.5__links" % version,

        # TODO: inconsistent across versions
        # "lock-%s__at_aspect-test_d__2.0.0__at_aspect-test_c_2.0.2" % version,
        # "lock-%s__at_aspect-test_d__2.0.0__at_aspect-test_c_2.0.2__links" % version,
    )
    for version in PNPM_LOCK_VERSIONS
]

[
    npm.npm_translate_lock(
        name = lockfile.replace(".yaml", ""),
        pnpm_lock = "//cases:%s" % lockfile,
        verify_node_modules_ignored = "//:.bazelignore",
    )
    for lockfile in PNPM_LOCK_TEST_CASES
]

[
    use_repo(
        npm,
        lockfile.replace(".yaml", ""),
    )
    for lockfile in PNPM_LOCK_TEST_CASES
]
