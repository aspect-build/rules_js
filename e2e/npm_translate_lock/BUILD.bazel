load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@aspect_rules_js//js:defs.bzl", "js_library", "js_test")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@npm//:defs.bzl", "npm_link_all_packages", "npm_link_targets")

npm_link_all_packages(name = "node_modules")

PROD_TARGETS = npm_link_targets(prod = True)

DEV_TARGETS = npm_link_targets(dev = True)

ALL_TARGETS = npm_link_targets()

js_library(
    name = "prod_deps",
    srcs = PROD_TARGETS,
)

js_library(
    name = "dev_deps",
    srcs = DEV_TARGETS,
)

js_library(
    name = "all_deps",
    srcs = ALL_TARGETS,
)

js_test(
    name = "test_prod_filtering",
    data = [":prod_deps"],
    entry_point = "test_prod_filtering.js",
)

js_test(
    name = "test_dev_filtering",
    data = [":dev_deps"],
    entry_point = "test_dev_filtering.js",
)

build_test(
    name = "test",
    targets = [
        ":node_modules",
        ":prod_deps",
        ":dev_deps",
        ":all_deps",
        ":test_prod_filtering",
        ":test_dev_filtering",
    ],
)

genrule(
    name = "npm_translate_lock_wksp-repositories",
    srcs = ["@npm//:repositories.bzl"],
    outs = ["wksp_repos_stripped.bzl"],
    cmd = 'sed "s/system_tar = .*,/system_tar = \\"xxx\\",/" "$<" > "$@"',
    target_compatible_with = select({
        "@aspect_bazel_lib//lib:bzlmod": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

write_source_files(
    name = "write_npm_translate_lock_wksp",
    files = {
        "snapshots/wksp/repositories.bzl": ":npm_translate_lock_wksp-repositories",
    },
    target_compatible_with = select({
        "@aspect_bazel_lib//lib:bzlmod": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
